import starrysugar.unicodecards.appdata.unicode.CharBidiClass;
import starrysugar.unicodecards.appdata.unicode.CharCategory;

CREATE TABLE `uc_unicode_data` (
`code_point` INTEGER PRIMARY KEY NOT NULL,
`name` TEXT NOT NULL,
`category` TEXT AS CharCategory NOT NULL,
`combining` INTEGER NOT NULL,
`bidi_class` TEXT AS CharBidiClass NOT NULL,
`cover` TEXT DEFAULT NULL
);

CREATE INDEX `uc_unicode_data_category` ON `uc_unicode_data`(`category`);
CREATE INDEX `uc_unicode_data_bidi_class` ON `uc_unicode_data`(`bidi_class`);

count:
SELECT COUNT(1)
FROM uc_unicode_data;

countBefore:
SELECT COUNT(1)
FROM uc_unicode_data
WHERE `code_point`<=:CodePoint;

insertData:
INSERT OR REPLACE INTO `uc_unicode_data`(
    `code_point`,
    `name`,
    `category`,
    `combining`,
    `bidi_class`
) VALUES (?,?,?,?,?);

updateNameFor:
UPDATE `uc_unicode_data`
SET `name`=:name
WHERE `code_point`=:CodePoint;

updateCoverFor:
UPDATE `uc_unicode_data`
SET `cover`=:cover
WHERE `code_point`=:CodePoint;

queryCodePointByIndex:
SELECT `code_point`
FROM `uc_unicode_data`
ORDER BY `code_point` ASC
LIMIT 1 OFFSET :index;

queryDataByIndex:
SELECT *
FROM `uc_unicode_data`
ORDER BY `code_point` ASC
LIMIT 1 OFFSET :index;

queryDataByIndexWithUserData:
SELECT uc_unicode_data.code_point, uc_unicode_data.name, uc_unicode_data.category,
uc_unicode_data.combining, uc_unicode_data.bidi_class, uc_unicode_data.cover,
IFNULL(uc_user_cards.card_count, 0) AS `card_count`
FROM `uc_unicode_data`
LEFT JOIN `uc_user_cards` ON `uc_user_cards`.`code_point`=`uc_unicode_data`.`code_point`
ORDER BY `uc_unicode_data`.`code_point` ASC
LIMIT 1 OFFSET :index;

queryDataByCodeWithUserData:
SELECT uc_unicode_data.code_point, uc_unicode_data.name, uc_unicode_data.category,
uc_unicode_data.combining, uc_unicode_data.bidi_class, uc_unicode_data.cover,
IFNULL(uc_user_cards.card_count, 0) AS `card_count`
FROM `uc_unicode_data`
LEFT JOIN `uc_user_cards` ON `uc_user_cards`.`code_point`=`uc_unicode_data`.`code_point`
WHERE `uc_unicode_data`.`code_point`=?
LIMIT 1;

queryDataPagingByBlockWithUserData:
SELECT uc_unicode_data.code_point, uc_unicode_data.name, uc_unicode_data.category,
uc_unicode_data.combining, uc_unicode_data.bidi_class, uc_unicode_data.cover,
IFNULL(uc_user_cards.card_count, 0) AS `card_count`
FROM `uc_unicode_data`
LEFT JOIN `uc_user_cards` ON `uc_user_cards`.`code_point`=`uc_unicode_data`.`code_point`
WHERE `uc_unicode_data`.`code_point` BETWEEN :start AND :end
LIMIT :limit OFFSET :offset;

queryBlockDataCount:
SELECT COUNT(1)
FROM `uc_unicode_data`
WHERE `code_point` BETWEEN ? AND ?;

queryFirstLetterByBlock:
SELECT `code_point`
FROM `uc_unicode_data`
WHERE (`code_point` BETWEEN ? AND ?) AND (`category` LIKE 'L_')
LIMIT 1;

queryFirstCharByBlock:
SELECT `code_point`
FROM `uc_unicode_data`
WHERE `code_point` BETWEEN ? AND ?
LIMIT 1;

clear:
DELETE FROM `uc_unicode_data` WHERE 1;